{
	"name": "Task1",
	"properties": {
		"description": "\n1) Fetching limited rows\n\n2) Copy the rows in an another , By changing the one filed \n\n3) Table , Log how many rows you processed , pipeline name , pipeline run id , run date \n\nsource table , target table\n",
		"activities": [
			{
				"name": "get_table_total_rows",
				"description": "returns the total number of the table",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[sp_get_row_count]",
						"storedProcedureParameters": {
							"table_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.pl_table",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlGenericConnection",
						"type": "DatasetReference",
						"parameters": {
							"ds_table": {
								"value": "@pipeline().parameters.pl_source_table",
								"type": "Expression"
							},
							"ds_schema": {
								"value": "@pipeline().parameters.pl_source_schema",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "batch_iterator",
				"description": "iterates through a table in batches",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get_table_total_rows",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(0, activity('get_table_total_rows').output.firstRow.rowCount / int(pipeline().parameters.pl_batch_size))",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[get_rows]",
									"storedProcedureParameters": {
										"batch_size": {
											"type": "Int32",
											"value": {
												"value": "@int(pipeline().parameters.pl_batch_size)",
												"type": "Expression"
											}
										},
										"last_accessed_row": {
											"type": "Int32",
											"value": {
												"value": "@int(variables('last_accessed_row'))",
												"type": "Expression"
											}
										},
										"table_name": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.pl_source_table",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "id",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 0,
												"precision": 18
											},
											"sink": {
												"name": "id",
												"type": "Decimal",
												"physicalType": "Decimal"
											}
										},
										{
											"source": {
												"name": "msg",
												"type": "String",
												"physicalType": "text"
											},
											"sink": {
												"name": "msg",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "userID",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "userID",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "username",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "username",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "channel",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "channel",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "messageID",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "messageID",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "datestamp",
												"type": "DateTime",
												"physicalType": "datetime"
											},
											"sink": {
												"name": "datestamp",
												"type": "DateTime",
												"physicalType": "DateTime"
											}
										},
										{
											"source": {
												"name": "attachments",
												"type": "String",
												"physicalType": "text"
											},
											"sink": {
												"name": "attachments",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "serverID",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "serverID",
												"type": "String",
												"physicalType": "String"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzureSqlGenericConnection",
									"type": "DatasetReference",
									"parameters": {
										"ds_table": {
											"value": "@pipeline().parameters.pl_source_table",
											"type": "Expression"
										},
										"ds_schema": {
											"value": "@pipeline().parameters.pl_source_schema",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSqlGenericConnection",
									"type": "DatasetReference",
									"parameters": {
										"ds_table": {
											"value": "@pipeline().parameters.pl_sink_table",
											"type": "Expression"
										},
										"ds_schema": {
											"value": "@pipeline().parameters.pl_sink_schema",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"pl_database": {
				"type": "string",
				"defaultValue": "discord-chat"
			},
			"pl_source_table": {
				"type": "string",
				"defaultValue": "chats"
			},
			"pl_source_schema": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"pl_batch_size": {
				"type": "string",
				"defaultValue": "4000"
			},
			"pl_sink_table": {
				"type": "string",
				"defaultValue": "chat_task_one"
			},
			"pl_sink_schema": {
				"type": "string",
				"defaultValue": "task_one"
			}
		},
		"variables": {
			"last_accessed_row": {
				"type": "String",
				"defaultValue": "0"
			}
		},
		"annotations": []
	}
}